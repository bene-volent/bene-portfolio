@import url("https://fonts.googleapis.com/css2?family=JetBrains+Mono&display=swap");

$screenSize: (
    lg: 1120px,
    md: 768px,
    sm: 500px
);

@mixin mq($breakpoint: md) {
    @media (width > map-get($screenSize, $breakpoint)) {
        @content;
    }
}

@mixin dark() {
    body[data-theme="dark"] & {
        @content;
    }
}

.content {
    display: grid;
    // font-family:
    //     system-ui,
    //     -apple-system,
    //     BlinkMacSystemFont,
    //     "Segoe UI",
    //     Roboto,
    //     Oxygen,
    //     Ubuntu,
    //     Cantarell,
    //     "Open Sans",
    //     "Helvetica Neue",
    //     sans-serif;

    // Experimenting
    /* For all <code> */
    code {
        font-family: "JetBrains Mono", monospace;
        font-size: inherit;
    }

    /* Code in text */
    p > code,
    li > code,
    dd > code,
    td > code {
        word-wrap: break-word;
        -webkit-box-decoration-break: clone;
        box-decoration-break: clone;
    }

    blockquote {
        position: relative;

        padding: var(--size-4) var(--size-4);

        background-color: hsl(var(--secondary) / 0.4);
        border-bottom-right-radius: var(--size-1);
        border-top-right-radius: var(--size-1);

        // border: 2px solid hsl(var(--accent));
        @include mq(sm) {
            padding: var(--size-4);
        }
        @include mq() {
            padding: var(--size-5);
        }

        &::before {
            content: "";

            position: absolute;
            left: 0;
            top: 0;

            border-radius: var(--size-1);

            width: var(--size-1);
            height: 100%;

            background-color: hsl(var(--accent));
        }
    }

    & :not(pre) code {
        background-color: hsl(var(--secondary));
        padding: 2.5px 6px;
        border-radius: var(--size-1);
    }

    pre code {
        display: block;
        background: none;
        white-space: pre;
        -webkit-overflow-scrolling: touch;
        overflow-x: visible;
        overflow-y: hidden;
        max-width: 100%;
        min-width: 100px;
        // padding: 0;

        padding: var(--size-2);
        border: 1px solid hsl(var(--primary));
        // font-size: var(--size-4);
        background-color: hsl(var(--secondary));

        border-radius: var(--size-2);

        @include mq(sm) {
            // max-width: 90%;
            margin-inline: 0;
            padding: var(--size-3);
        }

        @include mq() {
            padding: var(--size-4);
            max-width: 100%;
        }

        &::-webkit-scrollbar {
            // width: 1px;
            height: 5px;
        }

        /* Track */
        &::-webkit-scrollbar-track {
            background: transparent;
        }

        /* Handle */
        &::-webkit-scrollbar-thumb {
            background: hsl(var(--accent));
            border-radius: var(--size-2);
        }
    }

    h2 {
        @include mq() {
            font-size: var(--size-7);
        }
    }

    p {
        font-size: 16px;

        @include mq() {
            font-size: calc(var(--size-4) + (var(--size-1) / 2));
        }

        @include mq(lg) {
            font-size: calc(var(--size-5));
        }
    }

    img,
    video,
    svg {
        border-radius: var(--size-2);
    }

    li {
        -webkit-margin-before: 0.5em;
                margin-block-start: 0.5em;
    }

    ul,ol{
        -webkit-padding-start: 1em;
                padding-inline-start: 1em;
    }

    ul li {
        &::marker {
            color: hsl(var(--accent));
        }
    }

    ol li {
        &::marker {
            font-size: 1.25em;
            font-weight: 600;
            color: hsl(var(--accent));
        }
    }

    pre,
    pre:has(code) {
        overflow-x: visible;
        overflow-y: hidden;
    }

    p code {
        background-color: hsl(var(--secondary));
        font-weight: 400;
        font-size: var(--size-4);

        @include mq(sm) {
            font-size: var(--size-4);
        }
    }

    a:not([href^="#"]) {
        text-decoration: underline;

        color: rgb(79, 93, 255);

        &:hover {
            text-underline-offset: 0.25em;
        }

        @include dark() {
            color: #ff0;
        }
    }

    .contains-task-list {
        list-style: none;
        padding-left: 0;
    }
}
